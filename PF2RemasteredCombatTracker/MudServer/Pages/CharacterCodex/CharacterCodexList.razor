@page "/character-codex-list"

@inject ICharacterCodexService CharacterCodexService
@inject NavigationManager NavManager

<MudText Typo="Typo.h3">Character Codex</MudText>

<MudTable Items="@characterCodex">
    <HeaderContent>
        <MudTh>Creature Name</MudTh>
        <MudTh>HP</MudTh>
        <MudTh>Current HP</MudTh>
        <MudTh>AC</MudTh>
        <MudTh>ATR Melee</MudTh>
        <MudTh>ATR Ranged</MudTh>
        <MudTh>Damage Bonus Melee</MudTh>
        <MudTh>Damage Bonus Ranged</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.CreatureName</MudTd>
        <MudTd>@context.HP</MudTd>
        <MudTd>@context.HPCurrent</MudTd>
        <MudTd>@context.AC</MudTd>

        <MudTd>@context.AttackBonusMelee</MudTd>
        <MudTd>@context.AttackBonusRanged</MudTd>
        <MudTd>@context.BonusDamageMelee</MudTd>
        <MudTd>@context.BonusDamageRanged</MudTd>
        <MudTd>
            <MudButton Color="Color.Primary" Size="Size.Small" OnClick="@(() => NavigateToCharacterCodex(context.Id))">Edit</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

<MudButton Href="/character-codex-upsert" Color="Color.Success">Add New Character Codex</MudButton>


@code {
    private List<CharacterCodex> characterCodex = new List<CharacterCodex>();
    

    protected override async Task OnInitializedAsync()
    {
        characterCodex = await CharacterCodexService.GetAllAsync();
    }


    private void NavigateToCharacterCodex(int characterCodexId)
    {
        NavManager.NavigateTo($"/character-codex-upsert/{characterCodexId}");
    }
}
